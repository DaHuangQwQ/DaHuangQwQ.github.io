import{_ as s,c as i,a2 as t,o as d}from"./chunks/framework.BQmytedh.js";const f=JSON.parse('{"title":"P2700 逐个击破","description":"","frontmatter":{},"headers":[],"relativePath":"cpp/1984-01/P2700 逐个击破.md","filePath":"cpp/1984-01/P2700 逐个击破.md"}'),n={name:"cpp/1984-01/P2700 逐个击破.md"};function h(k,a,p,l,E,e){return d(),i("div",null,a[0]||(a[0]=[t(`<h1 id="p2700-逐个击破" tabindex="-1" data-v-7d618af9>P2700 逐个击破 <a class="header-anchor" href="#p2700-逐个击破" aria-label="Permalink to &quot;P2700 逐个击破&quot;" data-v-7d618af9>​</a></h1><div class="language-cpp vp-adaptive-theme" data-v-7d618af9><button title="Copy Code" class="copy" data-v-7d618af9></button><span class="lang" data-v-7d618af9>cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-7d618af9><code data-v-7d618af9><span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-7d618af9> &lt;iostream&gt;</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-7d618af9> &lt;cstring&gt;</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-7d618af9> &lt;algorithm&gt;</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>using</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9> namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-7d618af9> std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>;</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-7d618af9> 100010</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>;</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-7d618af9> edge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>{</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>	int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> u,v,w;</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>	const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9> bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9> operator</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-7d618af9>&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-7d618af9> edge</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-7d618af9> a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>{</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>		return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> a.w;</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>	}</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>}e[N];</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>long</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> n,m,tot,sum,res,p[N];</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> vis[N];</span></span>
<span class="line" data-v-7d618af9></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-7d618af9> find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-7d618af9> a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>){</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>	if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>(p[a] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>!=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> a) p[a] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-7d618af9> find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>(p[a]);</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>	return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> p[a];</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>}</span></span>
<span class="line" data-v-7d618af9></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-7d618af9> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>(){</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>	cin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> m;</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>	for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-7d618af9> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> m;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>){</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>		int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> u; cin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> u;</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>		vis[u] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-7d618af9> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>;</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>	}</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>	for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-7d618af9> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>;i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> n;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>){</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>		int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> u,v,w; cin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> u </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> w;</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>		e[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> edge{u,v,w};</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>		tot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> w;</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>	}</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>	for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-7d618af9> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>;i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> n;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>) p[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> i;</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-7d618af9>	sort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>(e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-7d618af9>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>, e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>n);</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>	for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-7d618af9> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>;i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> n;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>){</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>		int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> u </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-7d618af9> find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>(e[i].u);</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>		int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-7d618af9> find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>(e[i].v);</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>		if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>(vis[u] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> vis[v]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>continue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>;</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>		if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>(u </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>!=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> v){</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>			p[u] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> v;</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>		}</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>		sum </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> e[i].w;</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>		if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>(vis[u]) vis[v] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-7d618af9> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-7d618af9> // 标记一对相互连接的节点，以确保它们被同时处理或不被同时处理</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>		if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>(vis[v]) vis[u] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-7d618af9> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>;</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>	}</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>	cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> tot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> sum </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9> endl;</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-7d618af9>	return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-7d618af9> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>;</span></span>
<span class="line" data-v-7d618af9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-7d618af9>}</span></span></code></pre></div>`,2)]))}const r=s(n,[["render",h],["__scopeId","data-v-7d618af9"]]);export{f as __pageData,r as default};
