import{_ as l,c as n,o as t,V as i,m as s,a}from"./chunks/framework.WykxUCM3.js";const e="/assets/mysqljob1.p2UBmQPf.png",h="/assets/mysqljob2.JP3GVobo.png",q=JSON.parse('{"title":"分布式任务调度系统","description":"","frontmatter":{},"headers":[],"relativePath":"labnote/go/分布式任务调度系统.md","filePath":"labnote/go/分布式任务调度系统.md"}'),p={name:"labnote/go/分布式任务调度系统.md"},r=i("",22),k=s("ul",null,[s("li",null,"调度中心开始调度，执行节点只会返回一个 Accepted 的响应，意思就是我正在执行。"),s("li",null,[a("两个选择： "),s("ul",null,[s("li",null,[a("调度中心主动探查 "),s("ul",null,[s("li",null,[a("同样用 HTTP 接口或者 RPC 接口来探查 "),s("ul",null,[s("li",null,"例如 HTTP 接口 POST POST /a/b/most_fans 方法，就是启动新任务"),s("li",null,"GET /a/b/most_fans 就是拿执行进度"),s("li",null,"GET /a/b/all_tasks 拿到当前节点所有执行中任务")])]),s("li",null,"一种优化措施：就是每个执行节点至多有一个 TCP 连接，专门用来传递进度")])]),s("li",null,[a("执行节点主动上报 "),s("ul",null,[s("li",null,[a("调度节点暴露 HTTP 接口或者 RPC 接口 "),s("ul",null,[s("li",{"execution_id:":"","123,":"","progress:":"","50%":""},"执行节点 POST /a/b/task_progress")])]),s("li",null,[s("strong",null,"调度节点提供一个 消息队列和对应的 Topic"),a("。 "),s("ul",null,[s("li",null,"执行节点发送消息 {execution_id: 123, progress: 50%} 到 Topic 上"),s("li",null,"调度节点消费消息")])])])])])])],-1),o=i("",18),d=[r,k,o];function E(c,u,g,y,b,m){return t(),n("div",null,d)}const F=l(p,[["render",E]]);export{q as __pageData,F as default};
