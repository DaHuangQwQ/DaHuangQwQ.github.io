import{_ as s,c as i,a2 as d,o as t}from"./chunks/framework.BQmytedh.js";const r=JSON.parse('{"title":"歴史の研究","description":"","frontmatter":{},"headers":[],"relativePath":"cpp/2024-04/歴史の研究.md","filePath":"cpp/2024-04/歴史の研究.md"}'),n={name:"cpp/2024-04/歴史の研究.md"};function h(k,a,e,l,p,E){return t(),i("div",null,a[0]||(a[0]=[d(`<h1 id="歴史の研究" tabindex="-1" data-v-01da90e3>歴史の研究 <a class="header-anchor" href="#歴史の研究" aria-label="Permalink to &quot;歴史の研究&quot;" data-v-01da90e3>​</a></h1><div class="language-cpp vp-adaptive-theme" data-v-01da90e3><button title="Copy Code" class="copy" data-v-01da90e3></button><span class="lang" data-v-01da90e3>cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-01da90e3><code data-v-01da90e3><span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>#ifdef</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> ONLINE_JUDGE</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>&lt;bits/stdc++.h&gt;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>#else</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3> &lt;iostream&gt;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3> &lt;stdio.h&gt;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3> &lt;assert.h&gt;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3> &lt;algorithm&gt;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3> &lt;cstring&gt;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3> &lt;queue&gt;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3> &lt;vector&gt;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>#endif</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>using</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3> namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> ll</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3> long</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3> long</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> endl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>&quot;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> INF</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>e</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>9</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>typedef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> pair</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>&lt;int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>int&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> PII;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> ll</span></span>
<span class="line" data-v-01da90e3></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>#ifdef</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> LOCAL_MACHINE</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>	#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-01da90e3>format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-01da90e3>arg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>...) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3>printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(format, ##arg)</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>	#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> debug_info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-01da90e3>format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, ...) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3>printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>\\033</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>[1m</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>\\033</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>[45;33m Info:[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>%s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>%s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>%lld</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>)]: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>\\033</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>[0m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> format </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3>__FILE__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3>__FUNCTION__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3>__LINE__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, ##__VA_ARGS__);</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>#else</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>	#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-01da90e3>format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-01da90e3>arg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>...);</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>	#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> debug_info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-01da90e3>format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, ...)</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>#endif</span></span>
<span class="line" data-v-01da90e3></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> zassert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-01da90e3>x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-01da90e3>s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>\\</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>	do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> ((x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>) { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3>printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>%s\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, s); </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3>assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>((x)); } } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>)</span></span>
<span class="line" data-v-01da90e3></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>e</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>6</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-01da90e3>// </span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> n, m, B;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> block[N];</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> node</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> {</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> l, r, id;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>    bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3> operator</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3>&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> node</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-01da90e3> a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> {</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(block[l] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>!=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> block[a.l]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> l </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> a.l;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> a.r;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>    }</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>} q[N];</span></span>
<span class="line" data-v-01da90e3></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> cnt[N], sum;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> a[N], b[N];</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> ans[N];</span></span>
<span class="line" data-v-01da90e3></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-01da90e3> x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>){</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>    cnt[x]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>    sum </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(sum, cnt[x] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> b[x]);</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>}</span></span>
<span class="line" data-v-01da90e3></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> c[N];</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3>ll</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> calc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-01da90e3> l</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-01da90e3> r</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>){</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>    ll res </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> l; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> r;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>) c[a[i]] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> l; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> r;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>){</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>        ++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>c[a[i]];</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>        res </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(res, c[a[i]] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> b[a[i]]);</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>    }</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> res;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>}</span></span>
<span class="line" data-v-01da90e3></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> solve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(){</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-01da90e3>    // cin &gt;&gt; n &gt;&gt; m;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3>    scanf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>%lld</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> %lld</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>n, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>m);</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>    B </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> sqrt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(n);</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>;i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> n;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>){</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-01da90e3>        // cin &gt;&gt; a[i];</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3>        scanf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>%lld</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>a[i]);</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>        b[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> a[i];</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>        block[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> B </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>    }</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> num </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> block[n];</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3>    sort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>);</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>;i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> n;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>){</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>        a[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> lower_bound</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, a[i]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> b;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>    }</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>;i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> m;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>){</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> l, r; </span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-01da90e3>        // cin &gt;&gt; l &gt;&gt; r;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3>        scanf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>%lld</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> %lld</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>l, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>r);</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>        q[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> (node){l, r, i};</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>    }</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3>    sort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>);</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>;i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> num;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>){</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-01da90e3> // 第i块</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>        sum </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> last </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>        for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>;j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> n;j</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>) cnt[j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> R </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> min</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(B</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>i, n);</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> l </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> R </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> R;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>        for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(;block[q[x].l] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> i; x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>){</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-01da90e3> // 第i块的查询x</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(block[q[x].l] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> block[q[x].r]){</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>                ans[q[x].id] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> calc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(q[x].l, q[x].r);</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>                continue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>            }</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>            while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> q[x].r) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3>add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(a[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>r]);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-01da90e3> // 右扩展</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>            last </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> sum;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>            while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(l </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> q[x].l) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3>add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(a[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>l]);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-01da90e3> // 左扩展</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>            ans[q[x].id] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> sum;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>            while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(l </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> r) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>cnt[a[l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>]];</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-01da90e3> // 回滚</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>            sum </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> last;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>        }</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>    }</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>;i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> m;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>){</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-01da90e3>        // cout &lt;&lt; ans[i] &lt;&lt; endl;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3>        printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3>%lld\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-01da90e3>&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>, ans[i]);</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>    }</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>}</span></span>
<span class="line" data-v-01da90e3></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>signed</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(){</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>    #ifdef</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3> ONLINE_JUDGE</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-01da90e3>    // freopen(&quot;&quot;, &quot;r&quot;, stdin);</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>    #endif</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-01da90e3>    // ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-01da90e3>    // cin &gt;&gt; n;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>    while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>(n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>){</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-01da90e3>solve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>();}</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-01da90e3>    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-01da90e3> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>;</span></span>
<span class="line" data-v-01da90e3><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-01da90e3>}</span></span></code></pre></div>`,2)]))}const g=s(n,[["render",h],["__scopeId","data-v-01da90e3"]]);export{r as __pageData,g as default};
