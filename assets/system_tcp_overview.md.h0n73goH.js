import{_ as e,c as a,o as t,V as o}from"./chunks/framework.WykxUCM3.js";const v=JSON.parse('{"title":"01 overview","description":"","frontmatter":{},"headers":[],"relativePath":"system/tcp/overview.md","filePath":"system/tcp/overview.md"}'),r={name:"system/tcp/overview.md"},i=o('<h1 id="_01-overview" tabindex="-1">01 overview <a class="header-anchor" href="#_01-overview" aria-label="Permalink to &quot;01 overview&quot;">​</a></h1><h2 id="什么是拥塞" tabindex="-1">什么是拥塞 <a class="header-anchor" href="#什么是拥塞" aria-label="Permalink to &quot;什么是拥塞&quot;">​</a></h2><p><em>拥塞崩溃</em> 的本质：当拥塞过于严重时，每一个参与者分配到的资源比没有拥塞时要差的多</p><h2 id="控制拥塞" tabindex="-1">控制拥塞 <a class="header-anchor" href="#控制拥塞" aria-label="Permalink to &quot;控制拥塞&quot;">​</a></h2><p><em>goodput</em>：它与吞吐量（throughput）有所区别，只有实际能传输数据的数据包才会计算在_goodput_之内。假设一个链路的利用率达到100%，但有60%的数据包是因为之前的丢失而被重新传输，那么你可以说这个链路的 <em>goodput</em> 只有40%。</p><h2 id="理论基础" tabindex="-1">理论基础 <a class="header-anchor" href="#理论基础" aria-label="Permalink to &quot;理论基础&quot;">​</a></h2>',6),s=[i];function _(c,n,d,h,l,m){return t(),a("div",null,s)}const u=e(r,[["render",_]]);export{v as __pageData,u as default};
