import{_ as a,c as s,o as i,V as t}from"./chunks/framework.jgiY9GFO.js";const g=JSON.parse('{"title":"P_1141_01_迷宫","description":"","frontmatter":{},"headers":[],"relativePath":"cpp/2024-04-12/P_1141_01_迷宫.md","filePath":"cpp/2024-04-12/P_1141_01_迷宫.md"}'),d={name:"cpp/2024-04-12/P_1141_01_迷宫.md"},n=t(`<h1 id="p-1141-01-迷宫" tabindex="-1" data-v-1fa13fd5>P_1141_01_迷宫 <a class="header-anchor" href="#p-1141-01-迷宫" aria-label="Permalink to &quot;P_1141_01_迷宫&quot;" data-v-1fa13fd5>​</a></h1><div class="language-cpp vp-adaptive-theme" data-v-1fa13fd5><button title="Copy Code" class="copy" data-v-1fa13fd5></button><span class="lang" data-v-1fa13fd5>cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-1fa13fd5><code data-v-1fa13fd5><span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>#ifdef</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5> ONLINE_JUDGE</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5>&lt;bits/stdc++.h&gt;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>#else</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5> &lt;iostream&gt;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5> &lt;stdio.h&gt;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5> &lt;assert.h&gt;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5> &lt;algorithm&gt;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5> &lt;cstring&gt;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5> &lt;queue&gt;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5> &lt;vector&gt;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>#endif</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>using</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5> namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5> std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5> ll</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5> long</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5> long</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5> endl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5>&quot;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5> INF</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>e</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>9</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>typedef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> pair</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>&lt;int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>int&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> PII;</span></span>
<span class="line" data-v-1fa13fd5></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>#ifdef</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5> LOCAL_MACHINE</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>	#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5> debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-1fa13fd5>format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-1fa13fd5>arg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>...) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5>printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(format, ##arg)</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>	#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5> debug_info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-1fa13fd5>format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>, ...) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5>printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5>&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>\\033</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5>[1m</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>\\033</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5>[45;33m Info:[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>%s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5>:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>%s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5>)]: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>\\033</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5>[0m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> format </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5>&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5>&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5>__FILE__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5>__FUNCTION__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5>__LINE__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>, ##__VA_ARGS__);</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>#else</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>	#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5> debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-1fa13fd5>format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-1fa13fd5>arg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>...);</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>	#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5> debug_info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-1fa13fd5>format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>, ...)</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>#endif</span></span>
<span class="line" data-v-1fa13fd5></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5> zassert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-1fa13fd5>x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-1fa13fd5>s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>\\</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>	do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> ((x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>) { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5>printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5>&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>%s\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5>&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>, s); </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5>assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>((x)); } } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>)</span></span>
<span class="line" data-v-1fa13fd5></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>e</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>// </span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> n,m;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> board[N][N];</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5> node</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>{</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> x, y, w;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>};</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> vis[N][N];</span></span>
<span class="line" data-v-1fa13fd5></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> dx[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>};</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> dy[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>};</span></span>
<span class="line" data-v-1fa13fd5></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5> bfs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-1fa13fd5> x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-1fa13fd5> y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>){</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5>    memset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(vis, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>, sizeof vis);</span></span>
<span class="line" data-v-1fa13fd5></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> res </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>    queue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>node</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> q;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>    q.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5>push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>((node){x,y,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>});</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>    vis[x][y] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>    while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>q.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5>empty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>()){</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>        node t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> q.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5>back</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>();</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>        q.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5>pop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>();</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>        for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>){</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>            int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> dx[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> t.x;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>            int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> dy[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> t.y;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>            int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> t.w;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> vis[x][y] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>continue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(board[x][y] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> board[t.x][t.y]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>continue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>            // cout &lt;&lt; x &lt;&lt; &quot; &quot; &lt;&lt; y &lt;&lt; &quot; &quot; &lt;&lt; w &lt;&lt; endl;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>            q.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5>push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>((node){x,y,w</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>});</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>            vis[x][y] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>            res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>        }</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>    }</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> res;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>}</span></span>
<span class="line" data-v-1fa13fd5></span>
<span class="line" data-v-1fa13fd5></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>// int dfs(int x, int y, int d){</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>//     int res = d;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>//     for(int i = 0;i &lt; 4; i++){</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>//         int nx = dx[i] + x;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>//         int ny = dy[i] + y;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>//         if(nx &lt; 1 || nx &gt; n || ny &lt; 1 || ny &gt; n || vis[nx][ny] == true) continue;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>//         if(board[x][y] == board[nx][ny]) continue;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>//         // cout &lt;&lt; nx &lt;&lt; &quot; &quot; &lt;&lt; ny &lt;&lt; endl;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>//         vis[nx][ny] = true;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>//         res = max(dfs(nx, ny, d + 1), res);</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>//         vis[nx][ny] = false;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>//     }</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>//     return res;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>// }</span></span>
<span class="line" data-v-1fa13fd5></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5> solve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(){</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>    cin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> m;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>;i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> n;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>){</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>        string st; cin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> st;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>        for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>;j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> n;j</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>){</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>            board[i][j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> st[j</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-1fa13fd5> &#39;0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>        }</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>    }</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>    while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> (m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>) {</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> x, y; cin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> y;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>        cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>&lt;&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5> bfs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(x, y) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> endl;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>        // memset(vis, false, sizeof vis);</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>        // vis[x][y] = true;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>        // cout &lt;&lt; dfs(x, y, 1) &lt;&lt; endl;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>    }</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>}</span></span>
<span class="line" data-v-1fa13fd5></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>signed</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(){</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>    #ifdef</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5> ONLINE_JUDGE</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>    // freopen(&quot;&quot;, &quot;r&quot;, stdin);</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>    #endif</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5>    ios</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5>sync_with_stdio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>);cin.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5>tie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>);cout.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5>tie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5>0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>);</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-1fa13fd5>    // cin &gt;&gt; n;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>    while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>(n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>){</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-1fa13fd5>solve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>();}</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-1fa13fd5>    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-1fa13fd5> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>;</span></span>
<span class="line" data-v-1fa13fd5><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-1fa13fd5>}</span></span></code></pre></div>`,2),h=[n];function k(l,f,p,e,E,v){return i(),s("div",null,h)}const y=a(d,[["render",k],["__scopeId","data-v-1fa13fd5"]]);export{g as __pageData,y as default};
