import{_ as a,c as s,o as i,V as e}from"./chunks/framework.WykxUCM3.js";const g=JSON.parse('{"title":"P_2824_HEOI_2016_TJOI_2016_排序","description":"","frontmatter":{},"headers":[],"relativePath":"cpp/1984-01/P_2824_HEOI_2016_TJOI_2016_排序.md","filePath":"cpp/1984-01/P_2824_HEOI_2016_TJOI_2016_排序.md"}'),t={name:"cpp/1984-01/P_2824_HEOI_2016_TJOI_2016_排序.md"},h=e(`<h1 id="p-2824-heoi-2016-tjoi-2016-排序" tabindex="-1" data-v-8c4ee600>P_2824_HEOI_2016_TJOI_2016_排序 <a class="header-anchor" href="#p-2824-heoi-2016-tjoi-2016-排序" aria-label="Permalink to &quot;P_2824_HEOI_2016_TJOI_2016_排序&quot;" data-v-8c4ee600>​</a></h1><div class="language-cpp vp-adaptive-theme" data-v-8c4ee600><button title="Copy Code" class="copy" data-v-8c4ee600></button><span class="lang" data-v-8c4ee600>cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-8c4ee600><code data-v-8c4ee600><span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-8c4ee600> &lt;iostream&gt;</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-8c4ee600> &lt;cstring&gt;</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-8c4ee600> &lt;algorithm&gt;</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-8c4ee600> &lt;set&gt;</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>using</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600> namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600> std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>;</span></span>
<span class="line" data-v-8c4ee600></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600> read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-8c4ee600>x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>){</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600> //快读</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>  x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-8c4ee600>0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>char</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600> c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>getchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>();</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>  while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>isdigit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(c))c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>getchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>();</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>  while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>isdigit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(c))x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-8c4ee600>10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-8c4ee600>&#39;0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>,c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>getchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>();</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>}</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600> N</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-8c4ee600>100005</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>;</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600> mid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600> ((l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>r)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-8c4ee600>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>)</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>typedef</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600> set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>&gt;::iterator it;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600> //set定位器</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>&lt;int&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600> st;</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600> n,m,tot,root[N],o[N];</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600> ls[N</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-8c4ee600>55</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>],rs[N</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-8c4ee600>55</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>],sum[N</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-8c4ee600>55</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>];</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600>//o[p]:记录p位置之后的一段是升序还是降序</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600>//sum[x]:记录区间权值个数之和</span></span>
<span class="line" data-v-8c4ee600></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600> change</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-8c4ee600>x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-8c4ee600> l</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-8c4ee600> r</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-8c4ee600> p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>){</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600> //点修</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>  x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>=++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>tot; sum[x]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-8c4ee600>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>;</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>r) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>;</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>mid)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>change</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(ls[x],l,mid,p);</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>  else</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600> change</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(rs[x],mid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-8c4ee600>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>,r,p);</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>}</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600> query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-8c4ee600> x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-8c4ee600> l</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-8c4ee600> r</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>){</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600> //点查</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>r) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600> l;</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(ls[x]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600> query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(ls[x],l,mid);</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>  else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600> return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600> query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(rs[x],mid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-8c4ee600>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>,r);</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>}</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600> merge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-8c4ee600>x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-8c4ee600> y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>){</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600> //合并</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>||!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>y){x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>y;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>;}</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>  sum[x]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>sum[y];</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>  merge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(ls[x],ls[y]);</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>  merge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(rs[x],rs[y]);</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>}</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600> split</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-8c4ee600> x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-8c4ee600>y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-8c4ee600> k</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-8c4ee600> o</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>){</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600> //分裂</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600>  //将x从k处斩断，一段归x，另一段归y</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(sum[x]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>k) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>;</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>  y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>=++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>tot; sum[y]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>sum[x]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>k; sum[x]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>k;</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(o</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-8c4ee600>0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>){</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600> //升序，前k小归x</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(k</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>sum[ls[x]]) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>split</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(ls[x],ls[y],k,o),</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>swap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(rs[x],rs[y]);</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>    else</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600> split</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(rs[x],rs[y],k</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>sum[ls[x]],o);</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>  }</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>  else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>{</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600>     //降序，后k大归x</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(k</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>sum[rs[x]]) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>split</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(rs[x],rs[y],k,o),</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>swap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(ls[x],ls[y]);</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>    else</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600> split</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(ls[x],ls[y],k</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>sum[rs[x]],o);</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>  }</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>}</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>it</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600> SPL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-8c4ee600> p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>){</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600> //从p处分裂</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>  it i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>st.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>lower_bound</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(p);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600> //p在集合中的位置</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>p) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600> i;</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>  else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600> //i-1即p所在线段树的版本</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>  split</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(root[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>i],root[p],p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>-*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>i,o[p]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>o[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>i]);</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600> st.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>insert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(p).first;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600> //集合插入p并返回其位置</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>}</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(){</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>  read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(n),</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(m); </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600> x,op,l,r,q;</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-8c4ee600>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>n;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>i){</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>    read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(x),</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>change</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(root[i],</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-8c4ee600>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>,n,x);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600> //n颗线段树</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>    st.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>insert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(i);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600> //下标插入集合</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>  }</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>  while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>){</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>    read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(op),</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(l),</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(r);</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>    it a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>SPL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(l), b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>SPL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-8c4ee600>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600> //分裂成4段</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(it i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>=++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>a;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>!=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>b;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>i)</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>      merge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(root[l],root[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>i]);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600> //合并中间段</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>    o[l]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>op;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600> //记录l位置之后的一段是升序还是降序</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>    st.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>erase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(a,b);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600> //删除集合[l+1,r]段</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>  }</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>  read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(q); </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>SPL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(q); </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>SPL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-8c4ee600>+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-8c4ee600>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-8c4ee600> //把q线段树变成链</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>  printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-8c4ee600>&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-8c4ee600>%d\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-8c4ee600>&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-8c4ee600>query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>(root[q],</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-8c4ee600>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>,n));</span></span>
<span class="line" data-v-8c4ee600><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-8c4ee600>}</span></span></code></pre></div>`,2),k=[h];function n(l,p,d,E,c,r){return i(),s("div",null,k)}const y=a(t,[["render",n],["__scopeId","data-v-8c4ee600"]]);export{g as __pageData,y as default};
