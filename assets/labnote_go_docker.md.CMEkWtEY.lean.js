import{_ as r,c as n,j as e,a as o,o as t}from"./chunks/framework.BQmytedh.js";const m=JSON.parse('{"title":"Docker","description":"","frontmatter":{},"headers":[],"relativePath":"labnote/go/docker.md","filePath":"labnote/go/docker.md"}'),l={name:"labnote/go/docker.md"};function c(i,a,d,s,k,p){return t(),n("div",null,a[0]||(a[0]=[e("h1",{id:"docker",tabindex:"-1"},[o("Docker "),e("a",{class:"header-anchor",href:"#docker","aria-label":'Permalink to "Docker"'},"​")],-1),e("h3",{id:"技术",tabindex:"-1"},[o("技术 "),e("a",{class:"header-anchor",href:"#技术","aria-label":'Permalink to "技术"'},"​")],-1),e("ul",null,[e("li",null,"基于 Linux 内核的 Cgroup（Control Group，资源管控），Namespace（资源隔离），以及 Union FS 等技术，对进程进行封装隔离，属于操作系统层面的虚拟化技术，由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器"),e("li",null,"最初实现是基于 LXC，从 0.7 以后开始去除 LXC，转而使用自行开发的 Libcontainer，从 1.11 开始，则进一步演进为使用 runC 和 Containerd"),e("li",null,"Docker 在容器的基础上，进行了进一步的封装，从文件系统、网络互联到进程隔离等等，极大的简化了容器的创建和维护，使得 Docker 技术比虚拟机技术更为轻便、快捷")],-1)]))}const f=r(l,[["render",c]]);export{m as __pageData,f as default};
